#!/bin/bash
set -e

if [ ! -x "$(command -v jq)" ]; then echo "Required binary 'jq' is missing."; exit 1; fi
if [ ! -x "$(command -v recode)" ]; then echo "Required binary 'recode' is missing."; exit 1; fi
if [ ! -x "$(command -v curl)" ]; then echo "Required binary 'curl' is missing."; exit 1; fi

while [ $# -gt 0 ]; do
	case "$1" in
		--key=*)
			arg_key="${1#*=}"
			;;
		--pause)
			arg_pause=true
			arg_action="Pausing"
			arg_action_numeric=0
			;;
		--resume)
			arg_resume=true
			arg_action="Resuming"
			arg_action_numeric=1
			;;
		--monitor=*)
			arg_monitor="${1#*=}"
			;;
		*)
cat << EOF
Uptimerobot monitor status script. List, pause and resume all or specific uptimerobot monitors.
Parameters:
  --key=	API key of your uptimerobot account
  --pause	Pause matching monitors
  --resume	Resume matching monitors
  --monitor=	(Optional) ID or name of the selected monitor
EOF
exit 1
;;
	esac
	shift
done

if [[ -n $arg_pause && -n $arg_resume ]]; then
	echo "Pause and resume can't be used together!"
	exit 1
fi

if [[ -z $arg_key ]]; then
	echo "Please provide the uptimerobot API key!"
	exit 1
fi

# if monitors argument is numeric, we can directly search by ID
if [ ! -z "${arg_monitor##*[!0-9]*}" ]
	then all_monitors=$(curl -s 'https://api.uptimerobot.com/v2/getMonitors' -d "api_key=$arg_key&format=json&monitors=$arg_monitor")
	else all_monitors=$(curl -s 'https://api.uptimerobot.com/v2/getMonitors' -d "api_key=$arg_key&format=json&search=$arg_monitor")
fi

# wrapper function for filtering the all_monitors list
monitors_filter() {
	echo $(echo "$all_monitors" | jq "$1")
}

monitors_count=$(($(monitors_filter '.monitors | length')-1))

for monitor_index in $(seq 0 $monitors_count); do
	monitor_id=$(monitors_filter ".monitors[$monitor_index].id")
	monitor_name=$(monitors_filter ".monitors[$monitor_index].friendly_name" | recode html..ascii | sed 's/\"//g')

	# list monitors
	if [ -z $arg_action_numeric ]; then
		echo $monitor_id / $monitor_name

	# pause / resume monitors
	else
		echo -n "$arg_action monitor $monitor_id / $monitor_name"
		curl -s 'https://api.uptimerobot.com/v2/editMonitor' -d "api_key=$arg_key&format=json&id=$monitor_id&status=$arg_action_numeric" --output /dev/null
		echo ' - Done'
	fi

done
